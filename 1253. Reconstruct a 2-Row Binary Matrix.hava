//https://leetcode.com/problems/reconstruct-a-2-row-binary-matrix/description/
class Solution {
    public List<List<Integer>> reconstructMatrix(int upper, int lower, int[] colsum) {
            int l=lower;
            int u=upper;
        boolean[][] res = new boolean[2][colsum.length];
    for (int i = 0; i < colsum.length; ++i) {
        res[0][i] = colsum[i] == 2 || (colsum[i] == 1 && l < u);
        res[1][i] = colsum[i] == 2 || (colsum[i] == 1 && !res[0][i]);
        u -= res[0][i] ? 1 : 0;
        l -= res[1][i] ? 1 : 0;
    }
    return l == 0 && u == 0 ? new ArrayList(Arrays.asList(res[0], res[1])) : new ArrayList();   
        
    }
}
